# BSS Commerce Co.
#
# NOTICE OF LICENSE
#
# This source file is subject to the EULA
# that is bundled with this package in the file LICENSE.txt.
# It is also available through the world-wide-web at this URL:
# http://bsscommerce.com/Bss-Commerce-License.txt
#
# @category   BSS
# @package    Bss_ProductAttachmentGraphQl
# @author     Extension Team
# @copyright  Copyright (c) 2022 BSS Commerce Co. ( http://bsscommerce.com )
# @license    http://bsscommerce.com/Bss-Commerce-License.txt

type Query
{
    bssProductAttachmentConfig : getConfigOutput @resolver(class: "Bss\\ProductAttachmentGraphQl\\Model\\Resolver\\GetConfig") @doc(description:"Get config in Admin/Configuration/Bss/ProductAttachment")

    productAttachment(
        file_id: Int  @doc (description: "file_id")
    ): productAttachmentOutput @resolver(class: "Bss\\ProductAttachmentGraphQl\\Model\\Resolver\\Get") @doc(description: "Return the contents of a ProductAttachmentById.")

    footerAttachment(
        filter: footerInput @doc(description: "Defines the filter to use for searching attachment."),
    ): [productAttachmentOutput] @resolver(class: "Bss\\ProductAttachmentGraphQl\\Model\\Resolver\\Footer") @doc(description: "Return the contents of a FooterAttachment.")

    listProductAttachment(
        filter: filterInput @doc(description: "Defines the filter to use for searching attachment."),
        page_size: Int = 20 @doc(description: "Specifies the maximum number of results to return at once. The default value is 20."),
    ): [productAttachmentOutput] @resolver(class: "Bss\\ProductAttachmentGraphQl\\Model\\Resolver\\GetList") @cache(cacheable: false)
}

input footerInput @doc(description: "Identifies the customerGroup to use for filtering attachment.") {
    show_footer: Int
}

input filterInput @doc(description: "Identifies the filter to use for filtering attachment.") {
    file_id : Int
    title: String
    description: String
    status: Int
    type: Int
    uploaded_file: String
    size: Int
    store_id: Int
    customer_group: Int
    limit_time: Int
    position: Int
    downloaded_time: Int
    show_footer: Int

}

type Mutation {
    #deleteProductAttachment(
    #    file_id: Int @doc (description: "file_id")
    #): DeleteProductAttachment @resolver(class: "Bss\\ProductAttachmentGraphQl\\Model\\Resolver\\Delete")

    #SaveProductAttachmentById(
    #    input: SaveProductAttachmentInput
    #    @doc(description : "An input ")
    #): productAttachmentOutput @resolver(class: "Bss\\ProductAttachmentGraphQl\\Model\\Resolver\\Save")

    downloadTimeAttachment(
        file_id: Int @doc (description: "file_id")
    ): downloadTimeOutput @resolver(class: "Bss\\ProductAttachmentGraphQl\\Model\\Resolver\\DownloadTime")
}

type DeleteProductAttachment @doc(description : "Delete product attachment by id "){
    status : String @doc (description: "success or not success")
    message : String @doc (description: "message to delete")
}

input SaveProductAttachmentInput @doc(description : "Save details about the ProductAttachment"){
    file_id : String
    title: String
    description: String
    status: String
    type: String
    uploaded_file: String
    size: String
    store_id: String
    customer_group: String
    limit_time: String
    position: String
    downloaded_time: String
    show_footer: String
}

type getConfigOutput @doc(description: "Returns the requested config"){
    enable : String
    showProductTab: String
    tabTitle: String
    showBlock: String
    blockTitle: String
    maxSize: String
    showFileSize: String
    showDownloadNumber: String
}

type productAttachmentOutput @doc(description: "Returns GetListProductAttachment"){
    file_id : String
    title: String
    description: String
    status: String
    type: String
    uploaded_file: String
    size: String
    store_id: String
    customer_group: String
    limit_time: String
    position: String
    downloaded_time: String
    show_footer: String
}

type downloadTimeOutput @doc(description: "Returns DownloadTime"){
    downloaded_time: String
}

interface ProductInterface {
    product_attachment: [productAttachmentOutput] @resolver(class: "Bss\\ProductAttachmentGraphQl\\Model\\Resolver\\Products") @doc(description:"Get information product query .")
}
