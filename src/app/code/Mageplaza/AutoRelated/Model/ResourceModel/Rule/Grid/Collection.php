<?php
/**
 * Mageplaza
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Mageplaza.com license that is
 * available through the world-wide-web at this URL:
 * https://www.mageplaza.com/LICENSE.txt
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade this extension to newer
 * version in the future.
 *
 * @category    Mageplaza
 * @package     Mageplaza_AutoRelated
 * @copyright   Copyright (c) Mageplaza (https://www.mageplaza.com/)
 * @license     https://www.mageplaza.com/LICENSE.txt
 */

namespace Mageplaza\AutoRelated\Model\ResourceModel\Rule\Grid;

use Magento\Framework\DB\Select;
use Zend_Db_Expr;
use Mageplaza\AutoRelated\Model\ResourceModel\Rule\Collection as RuleCollection;

/**
 * Class Collection
 * @package Mageplaza\AutoRelated\Model\ResourceModel\Rule\Grid
 */
class Collection extends RuleCollection
{
    /**
     * @return $this
     */
    protected function _initSelect()
    {
        parent::_initSelect();

        $this->addFilterToMap('name', 'main_table.name');
        $this->addFieldToFilter('parent_id', ['eq' => 0]);

        $select            = $this->getSeLect();
        $selectItemsOrders = clone $this->getSelect();
        $selectItemsOrders->reset();

        $selectItemsOrders->from(
            ['order_item' => $this->getTable('sales_order_item')],
            '*'
        )->where(
            'base_row_invoiced - base_discount_invoiced - base_amount_refunded'
            . ' + IF(base_discount_refunded IS NULL, 0, base_discount_refunded) > 0'
        );

        $select->joinLeft(
            [
                'order_item' => new Zend_Db_Expr(
                    '(SELECT * FROM (' . $selectItemsOrders . ') AS item)'
                )
            ],
            'main_table.token = order_item.arp_rule_token',
            [
                'base_amount_refunded',
                'base_row_invoiced',
                'base_discount_invoiced',
                'base_discount_refunded',
                'order_id'
            ]
        )->columns([
            'revenue'   => new Zend_Db_Expr(
                'IFNULL(SUM(base_row_invoiced - base_discount_invoiced - base_amount_refunded'
                . ' + IF(base_discount_refunded IS NULL, 0, base_discount_refunded)), 0)'
            ),
            'order_qty' => new Zend_Db_Expr('COUNT(DISTINCT order_id)')
        ])->group('main_table.rule_id');

        return $this;
    }

    /**
     * @param array|string $field
     * @param null $condition
     *
     * @return $this|RuleCollection
     */
    public function addFieldToFilter($field, $condition = null)
    {
        if (($field === 'revenue' || $field === 'order_qty')) {
            $resultCondition = $this->_translateCondition($field, $condition);
            $this->getSelect()->having($resultCondition);

            return $this;
        }

        return parent::addFieldToFilter($field, $condition); // TODO: Change the autogenerated stub
    }

    /**
     * @return Select
     */
    public function getSelectCountSql()
    {
        $this->_renderFilters();

        return clone $this->getSelect();
    }
}
